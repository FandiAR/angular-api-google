{"version":3,"sources":["webpack:///./src/app/directives/safe.pipe.ts","webpack:///./src/app/services/person.service.ts","webpack:///./src/app/views/person/ahmad-dhani.component.html","webpack:///./src/app/views/person/ahmad-dhani.component.ts","webpack:///./src/app/views/person/arnold.component.html","webpack:///./src/app/views/person/arnold.component.ts","webpack:///./src/app/views/person/iwan-fals.component.html","webpack:///./src/app/views/person/iwan-fals.component.ts","webpack:///./src/app/views/person/person-routing.module.ts","webpack:///./src/app/views/person/person.module.ts","webpack:///./src/app/views/person/slank.component.html","webpack:///./src/app/views/person/slank.component.ts","webpack:///./src/app/views/person/taylor-swift.component.html","webpack:///./src/app/views/person/taylor-swift.component.ts","webpack:///./src/app/views/person/tom-cruise.component.html","webpack:///./src/app/views/person/tom-cruise.component.ts"],"names":[],"mappings":"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","file":"views-person-person-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  private API_KEY = 'AIzaSyDKa8xsK7fLSRtdOhZkEcxmp-o5DkFEaLY';\n\n  constructor(private http: HttpClient) { }\n\n  getPerson(name: string): Observable<any> {\n    const api = `https://kgsearch.googleapis.com/v1/entities:search?query=${name}&key=${this.API_KEY}&limit=1&indent=True`;\n    return this.http.get(api);\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width:1%\\\">No.</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Link</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ng-container *ngFor=\\\"let person of data;\\\">\\r\\n                                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\r\\n                                    <td>{{person.id}}</td>\\r\\n                                    <td>{{person.title}}</td>\\r\\n                                    <td>{{person.link}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Content\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { PersonService } from \"../../services/person.service\";\r\n\r\n@Component({\r\n  selector: \"app-ahmad-dhani\",\r\n  templateUrl: \"ahmad-dhani.component.html\",\r\n  providers: [PersonService]\r\n})\r\nexport class AhmadDhaniComponent implements OnInit {\r\n  data: any = [];\r\n  link: string;\r\n\r\n  constructor(private personService: PersonService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson() {\r\n    this.personService.getPerson(\"ahmad dhani\").subscribe(res => {\r\n      // this.data = res;\r\n      console.log(\r\n        \"XXX test\",\r\n        res.itemListElement[0].result.detailedDescription.url,\r\n        res.itemListElement[0].result.url\r\n      );\r\n      const url = [\r\n        {\r\n          id: 1,\r\n          title: \"Wikipedia - Ahmad Dhani\",\r\n          link: res.itemListElement[0].result.detailedDescription.url\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Website - Ahmad Dhani\",\r\n          link: res.itemListElement[0].result.url\r\n        }\r\n      ];\r\n      this.data = url;\r\n    });\r\n  }\r\n\r\n  loadFrame(person) {\r\n    this.link = person.link;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width:1%\\\">No.</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Link</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ng-container *ngFor=\\\"let person of data;\\\">\\r\\n                                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\r\\n                                    <td>{{person.id}}</td>\\r\\n                                    <td>{{person.title}}</td>\\r\\n                                    <td>{{person.link}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Content\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { PersonService } from \"../../services/person.service\";\r\n\r\n@Component({\r\n  selector: \"app-arnold\",\r\n  templateUrl: \"arnold.component.html\",\r\n  providers: [PersonService]\r\n})\r\nexport class ArnoldComponent implements OnInit {\r\n  data: any = [];\r\n  link: string;\r\n\r\n  constructor(private personService: PersonService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson() {\r\n    this.personService.getPerson(\"arnold schwarzenegger\").subscribe(res => {\r\n      // this.data = res;\r\n      console.log(\r\n        \"XXX test\",\r\n        res.itemListElement[0].result.detailedDescription.url,\r\n        res.itemListElement[0].result.url\r\n      );\r\n      const url = [\r\n        {\r\n          id: 1,\r\n          title: \"Wikipedia - Arnold Schwarzenegger\",\r\n          link: res.itemListElement[0].result.detailedDescription.url\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Website - Arnold Schwarzenegger\",\r\n          link: res.itemListElement[0].result.url\r\n        }\r\n      ];\r\n      this.data = url;\r\n    });\r\n  }\r\n\r\n  loadFrame(person) {\r\n    this.link = person.link;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width:1%\\\">No.</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Link</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ng-container *ngFor=\\\"let person of data;\\\">\\r\\n                                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\r\\n                                    <td>{{person.id}}</td>\\r\\n                                    <td>{{person.title}}</td>\\r\\n                                    <td>{{person.link}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Content\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { PersonService } from \"../../services/person.service\";\r\n\r\n@Component({\r\n  selector: \"app-iwan-fals\",\r\n  templateUrl: \"iwan-fals.component.html\",\r\n  providers: [PersonService]\r\n})\r\nexport class IwanFalsComponent implements OnInit {\r\n  data: any = [];\r\n  link: string;\r\n\r\n  constructor(private personService: PersonService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson() {\r\n    this.personService.getPerson(\"iwan fals\").subscribe(res => {\r\n      // this.data = res;\r\n      console.log(\r\n        \"XXX test\",\r\n        res.itemListElement[0].result.detailedDescription.url,\r\n        res.itemListElement[0].result.url\r\n      );\r\n      const url = [\r\n        {\r\n          id: 1,\r\n          title: \"Wikipedia - Iwan Fals\",\r\n          link: res.itemListElement[0].result.detailedDescription.url\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Website - Iwan Fals\",\r\n          link: res.itemListElement[0].result.url\r\n        }\r\n      ];\r\n      this.data = url;\r\n    });\r\n  }\r\n\r\n  loadFrame(person) {\r\n    this.link = person.link;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { TomCruiseComponent } from \"./tom-cruise.component\";\nimport { TaylorSwiftComponent } from \"./taylor-swift.component\";\nimport { ArnoldComponent } from \"./arnold.component\";\nimport { IwanFalsComponent } from \"./iwan-fals.component\";\nimport { SlankComponent } from \"./slank.component\";\nimport { AhmadDhaniComponent } from \"./ahmad-dhani.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    data: {\n      title: \"Person\"\n    },\n    children: [\n      {\n        path: \"tom-cruise\",\n        component: TomCruiseComponent,\n        data: {\n          title: \"Tom Cruise\"\n        }\n      },\n      {\n        path: \"taylor-swift\",\n        component: TaylorSwiftComponent,\n        data: {\n          title: \"Taylor Swift\"\n        }\n      },\n      {\n        path: \"arnold\",\n        component: ArnoldComponent,\n        data: {\n          title: \"Arnold Schwarzenegger\"\n        }\n      },\n      {\n        path: \"iwan-fals\",\n        component: IwanFalsComponent,\n        data: {\n          title: \"Iwan Fals\"\n        }\n      },\n      {\n        path: \"slank\",\n        component: SlankComponent,\n        data: {\n          title: \"Slank\"\n        }\n      },\n      {\n        path: 'ahmad-dhani',\n        component: AhmadDhaniComponent,\n        data: {\n          title: 'Ahmad Dhani'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PersonRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// person component\nimport { TomCruiseComponent } from \"./tom-cruise.component\";\nimport { TaylorSwiftComponent } from \"./taylor-swift.component\";\nimport { ArnoldComponent } from \"./arnold.component\";\nimport { IwanFalsComponent } from \"./iwan-fals.component\";\nimport { SlankComponent } from \"./slank.component\";\nimport { AhmadDhaniComponent } from './ahmad-dhani.component';\n\n//safe pipe\nimport { SafePipe } from \"../../directives/safe.pipe\";\n\n// drop down\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\n\n// person routing module\nimport { PersonRoutingModule } from \"./person-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, PersonRoutingModule, BsDropdownModule.forRoot()],\n  declarations: [\n    SafePipe,\n    TomCruiseComponent,\n    TaylorSwiftComponent,\n    ArnoldComponent,\n    IwanFalsComponent,\n    SlankComponent,\n    AhmadDhaniComponent\n  ]\n})\nexport class PersonModule {}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width:1%\\\">No.</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Link</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ng-container *ngFor=\\\"let person of data;\\\">\\r\\n                                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\r\\n                                    <td>{{person.id}}</td>\\r\\n                                    <td>{{person.title}}</td>\\r\\n                                    <td>{{person.link}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Content\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { PersonService } from \"../../services/person.service\";\r\n\r\n@Component({\r\n  selector: \"app-slank\",\r\n  templateUrl: \"slank.component.html\",\r\n  providers: [PersonService]\r\n})\r\nexport class SlankComponent implements OnInit {\r\n  data: any = [];\r\n  link: string;\r\n\r\n  constructor(private personService: PersonService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson() {\r\n    this.personService.getPerson(\"slank\").subscribe(res => {\r\n      // this.data = res;\r\n      console.log(\r\n        \"XXX test\",\r\n        res.itemListElement[0].result.detailedDescription.url,\r\n        res.itemListElement[0].result.url\r\n      );\r\n      const url = [\r\n        {\r\n          id: 1,\r\n          title: \"Wikipedia - Slank\",\r\n          link: res.itemListElement[0].result.detailedDescription.url\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Website - Slank\",\r\n          link: res.itemListElement[0].result.url\r\n        }\r\n      ];\r\n      this.data = url;\r\n    });\r\n  }\r\n\r\n  loadFrame(person) {\r\n    this.link = person.link;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width:1%\\\">No.</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Link</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ng-container *ngFor=\\\"let person of data;\\\">\\r\\n                                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\r\\n                                    <td>{{person.id}}</td>\\r\\n                                    <td>{{person.title}}</td>\\r\\n                                    <td>{{person.link}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Content\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { PersonService } from \"../../services/person.service\";\r\n\r\n@Component({\r\n  selector: \"app-taylor-swift\",\r\n  templateUrl: \"taylor-swift.component.html\",\r\n  providers: [PersonService]\r\n})\r\nexport class TaylorSwiftComponent implements OnInit {\r\n  data: any = [];\r\n  link: string;\r\n\r\n  constructor(private personService: PersonService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson() {\r\n    this.personService.getPerson(\"taylor swift\").subscribe(res => {\r\n      // this.data = res;\r\n      console.log(\r\n        \"XXX test\",\r\n        res.itemListElement[0].result.detailedDescription.url,\r\n        res.itemListElement[0].result.url\r\n      );\r\n      const url = [\r\n        {\r\n          id: 1,\r\n          title: \"Wikipedia - Taylor Swift\",\r\n          link: res.itemListElement[0].result.detailedDescription.url\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Website - Taylor Swift\",\r\n          link: res.itemListElement[0].result.url\r\n        }\r\n      ];\r\n      this.data = url;\r\n    });\r\n  }\r\n\r\n  loadFrame(person) {\r\n    this.link = person.link;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Search Result\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover table-sm btn\\\">\\n            <thead>\\n              <tr>\\n                <th style=\\\"width:1%\\\">No.</th>\\n                <th>Title</th>\\n                <th>Link</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <ng-container *ngFor=\\\"let person of data;\\\">\\n                <tr *ngIf=\\\"person.link\\\" (click)=\\\"loadFrame(person)\\\">\\n                  <td>{{person.id}}</td>\\n                  <td>{{person.title}}</td>\\n                  <td>{{person.link}}</td>\\n                </tr>\\n              </ng-container>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/.row-->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Content\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <iframe *ngIf=\\\"link\\\" id=\\\"myFrame\\\" [src]=\\\"link | safe\\\" style=\\\"height:380px;width:100%\\\"></iframe>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { PersonService } from \"../../services/person.service\";\n\n@Component({\n  selector: \"app-tom-cruise\",\n  templateUrl: \"tom-cruise.component.html\",\n  providers: [PersonService]\n})\nexport class TomCruiseComponent implements OnInit {\n  data: any = [];\n  link: string;\n\n  constructor(private personService: PersonService) {}\n\n  ngOnInit() {\n    this.getPerson();\n  }\n\n  getPerson() {\n    this.personService.getPerson(\"tom cruise\").subscribe(res => {\n      // this.data = res;\n      console.log(\n        \"XXX test\",\n        res.itemListElement[0].result.detailedDescription.url,\n        res.itemListElement[0].result.url\n      );\n      const url = [\n        {\n          id: 1,\n          title: \"Wikipedia - Tom Cruise\",\n          link: res.itemListElement[0].result.detailedDescription.url\n        },\n        {\n          id: 2,\n          title: \"Website - Tom Cruise\",\n          link: res.itemListElement[0].result.url\n        }\n      ];\n      this.data = url;\n    });\n  }\n\n  loadFrame(person) {\n    this.link = person.link;\n  }\n}\n"],"sourceRoot":""}